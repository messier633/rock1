def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var75 = func11(arg2, var61)
    var76 = var61 | var61 - arg1 & -1374964372
    var77 = var61 ^ var61 & (1194338121 - var61)
    var78 = 1950988681 + (var61 & 1703907275)
    if var78 < var77:
        var79 = var76 ^ ((var75 + var78) & arg1)
    else:
        var79 = (var76 ^ var75) | arg1
    var80 = var76 & var78
    var81 = (arg1 - arg2 + arg1) + var80
    var82 = arg1 + var78 | var77 ^ var61
    var83 = var61 - -172
    var84 = 763 + var78 ^ var78
    var85 = var78 | var78 | var82 | -702232627
    var86 = var84 & var85 & var78 ^ 776012377
    var87 = var75 ^ var86 | (var75 | var76)
    if var83 < var80:
        var88 = var85 - (var81 & var81)
    else:
        var88 = ((var82 - var81) - arg2) & var61
    var89 = var82 + -683 - arg2 | arg2
    var90 = (var82 + var87) & var61 & -80
    var91 = var87 & (var83 + var87 & var86)
    var92 = arg1 | var83 ^ var75
    result = var89 ^ var80
    return result
def func11(arg62, arg63):
    var64 = arg63 + arg62
    var65 = -922408556 & var64
    var66 = var64 + var64 - -820
    var67 = -1868406391 ^ var64
    var68 = (var67 - (arg62 & arg62)) - var66
    var69 = var64 & var67 ^ -527 | var67
    var70 = var64 & (var67 ^ 1385094308) & -57
    var71 = -493 ^ var70
    var72 = (var69 | var67 ^ var71) & var67
    var73 = -843 | -575 + var65 ^ 420
    var74 = ((var71 | var64) - var66) | var71
    result = arg63 ^ var66
    return result
def func4(arg6, arg7):
    var27 = var10(arg7, arg6)
    def func8(arg28, arg29):
        var30 = arg7 + arg7
        var31 = ((761492437 ^ (arg6 + arg29 & (arg29 ^ (arg28 | -229964512) | var27 | arg6 + var27))) - (arg7 + (arg7 ^ 1791532386 & 358) ^ arg29 & var30) & arg29 - ((arg7 & var30) - var30 | var27)) & -101 ^ var27
        var32 = arg7 + (((-1482558340 - var27 & (var27 & arg6)) & var30 & arg29) | var30)
        var33 = var31 & var30 ^ (arg28 - var31) & (2058420301 + (816 - arg7) & var30)
        var34 = (var27 & (arg6 & -439 - (var33 | (var33 & (var30 | arg28 ^ (var30 - (((var31 + var30) & var31 - var33) ^ var32 - var31) + var30 & arg28)) + ((var30 + arg7) + arg6 - var33))) | arg28)) + arg6
        result = var31 + var27 - (var31 | (var34 ^ var34 - var32) | (((var32 - var34) - var30 + var33) | arg6) + var32)
        return result
    var35 = func8(arg6, var27)
    var39 = func9(var35, var27)
    var40 = 557 | var35
    var41 = 115094279 & -869
    if var39 < var27:
        var42 = (1282170833 ^ arg7 + -373373792) | var39
    else:
        var42 = (var41 + var35 & -70) + 1752910440
    var43 = (var39 - var27 + -813) - -586
    var44 = (arg6 + arg6) | var43 - 1403681805
    var45 = (var35 ^ var43 ^ arg6) | var43
    var46 = var40 | var39 + (var44 | var40)
    var47 = var45 ^ (arg6 & var41 + var27)
    var48 = (var39 & var41 & var46) | var40
    var49 = var39 + (var43 ^ var40 - arg6)
    if var46 < var48:
        var50 = (var44 + arg6) | var45 - -587
    else:
        var50 = var27 - var44
    var51 = arg7 + (var27 | var39 + var48)
    var52 = var45 & var45 - arg7 ^ -853567568
    var53 = var47 & var49 | var35 - var47
    var54 = var47 - var53
    var55 = var39 | var44
    var56 = var54 ^ (var41 & (var35 + var44))
    if var48 < var56:
        var57 = ((var35 | var52) ^ var51) | var47
    else:
        var57 = var52 ^ (var52 ^ var39)
    var58 = var47 | var53 + 796 & var35
    var59 = (var58 & (var48 - var52)) + -489352890
    var60 = (var49 + (var52 & -1678957152)) + arg7
    result = (var39 ^ var51) & ((var41 - var47) ^ var59)
    return result
def func7(arg11, arg12):
    var13 = 704 | -982 - 296 & -995
    var14 = ((arg12 - -615) - arg11) ^ 131
    var15 = 715566287 + (-372 & arg11)
    var16 = -436 + var13
    var17 = var16 | (var14 + arg11)
    var18 = arg12 ^ (640 - var17) | var15
    var19 = var13 - 1775001841
    var20 = var18 - var18
    var21 = var15 ^ (arg12 + var15) ^ var18
    var22 = var21 & 1953872201
    if arg11 < var22:
        var23 = arg11 & var20
    else:
        var23 = var20 - var20 & var14 + var16
    if arg11 < arg12:
        var24 = 1237274081 | (arg11 ^ var19 | -1176511609)
    else:
        var24 = var22 ^ var22 & var17 & -236287711
    var25 = ((var13 | arg12) + var13) ^ var22
    var26 = 161 - var16
    result = 333 + (-823 - arg11)
    return result
def func6():
    closure = [6]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func9(arg36, arg37):
    closure = [0]
    def func10(acc, rest):
        var38 = (closure[0] & (rest & rest)) ^ ((6 + (0 ^ rest)) + rest)
        closure[0] += var38
        if acc == 0:
            return var38
        else:
            result = func10(acc - 1, var38)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 93'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
